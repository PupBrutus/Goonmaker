//@author: 
//@help: 
//@tags: mixer
//@credits:

Texture2D tex0: PREVIOUS;
Texture2D tex1 <string uiname="Texture In 2";>;

SamplerState s1 <bool visible=false;string uiname="Sampler 1";> {Filter=MIN_MAG_MIP_LINEAR;AddressU=CLAMP;AddressV=CLAMP;};
SamplerState s2 <bool visible=false;string uiname="Sampler 2";> {Filter=MIN_MAG_MIP_LINEAR;AddressU=CLAMP;AddressV=CLAMP;};
float4x4 tTex1 <bool visible=false;string uiname="Texture Transform 1";>;
float4x4 tTex2 <bool visible=false;string uiname="Texture Transform 2";>;

float Input <float uimin=0.0;float uimax=1.0;> =1.0;
float2 R:TARGETSIZE;
void readtex(float2 uv,out float4 c0,out float4 c1){
	float2 uv1=mul(float4((uv.xy-0.5)*float2(1,-1),0,1),tTex1).xy*float2(1,-1)+.5;
	float2 uv2=mul(float4((uv.xy-0.5)*float2(1,-1),0,1),tTex2).xy*float2(1,-1)+.5;
	c0=tex0.Sample(s1,uv1);
	c1=tex1.Sample(s2,uv2);
}

float4 pFADE(float4 PosWVP:SV_POSITION,float2 x:TEXCOORD0):SV_TARGET{float4 c0,c1;readtex(x,c0,c1);
    float4 c=lerp(c0,c1,Input);
    return c;
}
float4 pADD(float4 PosWVP:SV_POSITION,float2 x:TEXCOORD0):SV_TARGET{float4 c0,c1;readtex(x,c0,c1);
    float4 c=lerp(c0,c0+c1,Input);
    return c;
}
float4 pSUB(float4 PosWVP:SV_POSITION,float2 x:TEXCOORD0):SV_TARGET{float4 c0,c1;readtex(x,c0,c1);
    float4 c=lerp(c0,c0-c1,Input);
    return c;
}
float4 pMUL(float4 PosWVP:SV_POSITION,float2 x:TEXCOORD0):SV_TARGET{float4 c0,c1;readtex(x,c0,c1);
    float4 c=lerp(c0,c0*c1,Input);
    return c;
}
float4 pMAX(float4 PosWVP:SV_POSITION,float2 x:TEXCOORD0):SV_TARGET{float4 c0,c1;readtex(x,c0,c1);
    float4 c=lerp(c0,max(c0,c1),Input);
    return c;
}
float4 pMIN(float4 PosWVP:SV_POSITION,float2 x:TEXCOORD0):SV_TARGET{float4 c0,c1;readtex(x,c0,c1);
    float4 c=lerp(c0,min(c0,c1),Input);
    return c;
}
float4 pBLEND(float4 PosWVP:SV_POSITION,float2 x:TEXCOORD0):SV_TARGET{float4 c0,c1;readtex(x,c0,c1);
    float4 c=lerp(c0,c1,c1.a*Input);
    return c;
}


technique10 Fade{pass P1{SetPixelShader(CompileShader(ps_4_0,pFADE()));}}

technique10 Add{pass P1{SetPixelShader(CompileShader(ps_4_0,pADD()));}}
technique10 Sub{pass P1{SetPixelShader(CompileShader(ps_4_0,pSUB()));}}
technique10 Mul{pass P1{SetPixelShader(CompileShader(ps_4_0,pMUL()));}}
technique10 Max{pass P1{SetPixelShader(CompileShader(ps_4_0,pMAX()));}}
technique10 Min{pass P1{SetPixelShader(CompileShader(ps_4_0,pMIN()));}}

technique10 Blend{pass P1{SetPixelShader(CompileShader(ps_4_0,pBLEND()));}}
